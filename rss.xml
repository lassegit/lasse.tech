<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[lasse.tech]]></title><description><![CDATA[Writing about technology and society from Berlin.]]></description><link>https://lasse.tech</link><generator>RSS for Node</generator><lastBuildDate>Tue, 12 Jun 2018 11:35:08 GMT</lastBuildDate><item><title><![CDATA[Gatsby and React-static]]></title><description><![CDATA[I have been wanting to start a blog for a while now. But I haven't come much further than writing pieces of incomplete text and researching…]]></description><link>https://lasse.techundefined</link><guid isPermaLink="false">https://lasse.techundefined</guid><pubDate>Tue, 12 Jun 2018 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I have been wanting to start a blog for a while now. But I haven&apos;t come much further than writing pieces of incomplete text and researching the various blogging tools. Part of the reason for this process, I think, is collecting, structuring and formulating your thoughts into a coherent format that allows you to write them down. Writing is fundamentally a different exercise than the its precursor, reading, and it takes effort accomplish it. The other is finding a blogging tool that suits your technical preferences.&lt;/p&gt;
&lt;p&gt;The static site generators are for me the optimal blogging tool available. It leverages technologies I know, is easy customizable and simplistic. They have the best performance and scalability of any blogging tool and that is while being free. And the usability is top notch, I can write my blog posts in my code editor, view it locally and deploy from the command line.&lt;/p&gt;
&lt;p&gt;In the area of static site generators, the most prominent are; Gatsby and React-static. Both are build on top of React and share enough similarities to be considered competitors. In practical use, they differ considerable which is a deliverable choice and this is reflected in the default boilerplate of both.&lt;/p&gt;
&lt;h2&gt;React-static&lt;/h2&gt;
&lt;p&gt;Run &lt;code class=&quot;language-text&quot;&gt;npm install -g react-static &amp;amp;&amp;amp; react-static create&lt;/code&gt; and install the basic boilerplate:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; robots&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;txt
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; src&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; App&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;css
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; containers&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;404.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; About&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; Blog&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; Home&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; Post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; logo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;png
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;babelrc
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eslintrc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;With React-static you get the familiar code structure from &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; with the &lt;code class=&quot;language-text&quot;&gt;react-static&lt;/code&gt; package added, along with &lt;code class=&quot;language-text&quot;&gt;react&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;react-dom&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;react-router&lt;/code&gt;. React-static provides a limited API for attaching data to the react app with the configuration located in the &lt;code class=&quot;language-text&quot;&gt;static.config.js&lt;/code&gt; file. Customization is done like a regular React app. There are no &lt;code class=&quot;language-text&quot;&gt;react-static&lt;/code&gt; specific plugins, you will need to integrate various Node or React packages when developing features such as: code highlighting, image handling or RSS feed. In this sense, React-static is more a boilerplate leveraging the React technology stack than an actual static site generator.&lt;/p&gt;
&lt;h2&gt;Gatsby&lt;/h2&gt;
&lt;p&gt;This is different in Gatsby. Run &lt;code class=&quot;language-text&quot;&gt;npm i -g gatsby-cli &amp;amp;&amp;amp; gatsby new my-app&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; src&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; components&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; header&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; layouts&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;css
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; pages&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;404.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
    &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; page&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;browser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;ssr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js
&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The Gatsby has its own structure and deviates from the &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; boilerplate. &lt;code class=&quot;language-text&quot;&gt;react&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;react-dom&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;react-router&lt;/code&gt; aren&apos;t in the package.json file – like with React-static – but bundled with Gatsby. Gatsby adds &lt;code class=&quot;language-text&quot;&gt;gatsby-browser.js&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;gatsby-ssr.js&lt;/code&gt; to access to the Gatsby specific API. This includes adding Gatsby specific plugins or adding custom page types with data, fore instance a blog post template. Gatsby ships with GraphQL for data handling. Beyond the React style used in the &lt;code class=&quot;language-text&quot;&gt;src/&lt;/code&gt; files, there isn&apos;t much evidence that Gatsby is build on React.&lt;/p&gt;
&lt;h2&gt;Comparison&lt;/h2&gt;
&lt;p&gt;Gatsby is essentially a static blog generator build on top of React with its own ecosystem, like Wordpress. Building a Gatsby site means using its plugins, API and documentation, not React&apos;s. For blogs, personal or coperate web sites this speeds up development by making image handling, code highlighting or setting up a RSS feed dead simple. The documentation from development to deployment is good.&lt;/p&gt;
&lt;p&gt;If Gatsby is build on top of React, React-static is build with React. Developing in React-static means developing a React application with data attached to it. It is simple to add data from a data source, but unlike it doesn&apos;t come bundled with useful plugins for image handling, attached files, code highlighting or adding Google analytics. To add such functionality means either coding it yourself or finding an npm package that does this. To add Markdown files as a data source you need to add: &lt;a href=&quot;https://github.com/DanWebb/jdown&quot;&gt;jdown&lt;/a&gt;, &lt;a href=&quot;https://github.com/paulmillr/chokidar&quot;&gt;chokidar&lt;/a&gt;, &lt;a href=&quot;https://github.com/pveyes/htmr&quot;&gt;htmr&lt;/a&gt; as shown in this &lt;a href=&quot;https://github.com/nozzle/react-static/tree/master/examples/markdown&quot;&gt;example&lt;/a&gt;. This comes build in with Gatsby.&lt;/p&gt;
&lt;p&gt;Choose Gatsby for a static web site and choose React-static if you want to add static data source to your React app.&lt;/p&gt;</content:encoded></item></channel></rss>