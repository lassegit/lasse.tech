{"version":3,"sources":["webpack:///component---src-templates-tag-js-3feb31e42e91d7f6e34b.js","webpack:///./src/templates/tag.js"],"names":["webpackJsonp","213","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Template","_ref","pathContext","data","tag","totalCount","allMarkdownRemark","title","site","siteMetadata","posts","edges","_react2","createElement","_reactHelmet2","className","map","post","i","key","_gatsbyLink2","to","node","frontmatter","path","date","pageQuery","undefined","_reactHelmet","_gatsbyLink","_propTypes","_propTypes2","_react","propTypes","PropTypes","shape","isRequired"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAsBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GCtBzE,QAASG,GAATC,GAAyC,GAArBC,GAAqBD,EAArBC,YAAaC,EAAQF,EAARE,KACtCC,EAAQF,EAARE,IACAC,EAAeF,EAAKG,kBAApBD,WACFE,EAAWH,EAAX,MAAoBD,EAAKK,KAAKC,aAAaF,MAC3CG,EAAQP,EAAKG,kBAAkBK,KAErC,OACEC,GAAAb,QAAAc,cAAA,WACED,EAAAb,QAAAc,cAACC,EAAAf,SAAOQ,MAAOA,IACfK,EAAAb,QAAAc,cAAA,UACGT,EADH,KACUC,EADV,KAGAO,EAAAb,QAAAc,cAAA,MAAIE,UAAU,aACXL,EAAMM,IAAI,SAACC,EAAMC,GAAP,MACTN,GAAAb,QAAAc,cAAA,MAAIM,IAAKD,GACPN,EAAAb,QAAAc,cAACO,EAAArB,SAAKsB,GAAIJ,EAAKK,KAAKC,YAAYC,MAC9BZ,EAAAb,QAAAc,cAAA,QAAME,UAAU,oBAAoBE,EAAKK,KAAKC,YAAYhB,QAE5DK,EAAAb,QAAAc,cAAA,QAAME,UAAU,mBAAhB,IAAoCE,EAAKK,KAAKC,YAAYE,KAA1D,UDhBX/B,EAAQI,YAAa,EACrBJ,EAAQgC,UAAYC,OACpBjC,EAAQK,QCJeC,CALxB,IAAA4B,GAAAjC,EAAA,IDaKmB,EAAgBlB,EAAuBgC,GCZ5CC,EAAAlC,EAAA,IDgBKyB,EAAexB,EAAuBiC,GCf3CC,EAAAnC,EAAA,GDmBKoC,EAAcnC,EAAuBkC,GClB1CE,EAAArC,EAAA,GDsBKiB,EAAUhB,EAAuBoC,ECMzBN,+CA2Bb1B,GAASiC,WACP/B,YAAagC,UAAUC,UAAUC,WACjCjC,KAAM+B,UAAUC,UAAUC","file":"component---src-templates-tag-js-3feb31e42e91d7f6e34b.js","sourcesContent":["webpackJsonp([129236653009385],{\n\n/***/ 213:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\texports.default = Template;\n\t\n\tvar _reactHelmet = __webpack_require__(39);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _gatsbyLink = __webpack_require__(34);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _propTypes = __webpack_require__(3);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Template(_ref) {\n\t  var pathContext = _ref.pathContext,\n\t      data = _ref.data;\n\t  var tag = pathContext.tag;\n\t  var totalCount = data.allMarkdownRemark.totalCount;\n\t\n\t  var title = tag + ' | ' + data.site.siteMetadata.title;\n\t  var posts = data.allMarkdownRemark.edges;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_reactHelmet2.default, { title: title }),\n\t    _react2.default.createElement(\n\t      'h1',\n\t      null,\n\t      tag,\n\t      ' (',\n\t      totalCount,\n\t      ')'\n\t    ),\n\t    _react2.default.createElement(\n\t      'ul',\n\t      { className: 'post-list' },\n\t      posts.map(function (post, i) {\n\t        return _react2.default.createElement(\n\t          'li',\n\t          { key: i },\n\t          _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { to: post.node.frontmatter.path },\n\t            _react2.default.createElement(\n\t              'span',\n\t              { className: 'post-list__title' },\n\t              post.node.frontmatter.title\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            'span',\n\t            { className: 'post-list__date' },\n\t            '(',\n\t            post.node.frontmatter.date,\n\t            ')'\n\t          )\n\t        );\n\t      })\n\t    )\n\t  );\n\t}\n\t\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\t\n\tTemplate.propTypes = {\n\t  pathContext: _propTypes2.default.shape({}).isRequired,\n\t  data: _propTypes2.default.shape({}).isRequired\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-tag-js-3feb31e42e91d7f6e34b.js","import Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Template({ pathContext, data }) {\n  const { tag } = pathContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const title = `${tag} | ${data.site.siteMetadata.title}`;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <div>\n      <Helmet title={title} />\n      <h1>\n        {tag} ({totalCount})\n      </h1>\n      <ul className=\"post-list\">\n        {posts.map((post, i) => (\n          <li key={i}>\n            <Link to={post.node.frontmatter.path}>\n              <span className=\"post-list__title\">{post.node.frontmatter.title}</span>\n            </Link>\n            <span className=\"post-list__date\">({post.node.frontmatter.date})</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"D MMM, YYYY\")\n            title\n            path\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nTemplate.propTypes = {\n  pathContext: PropTypes.shape({}).isRequired,\n  data: PropTypes.shape({}).isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/tag.js"],"sourceRoot":""}